{
  "contractName": "QuestCards",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040805190810160405280600a81526020017f51756573744361726473000000000000000000000000000000000000000000008152506040805190810160405280600581526020017f5155455354000000000000000000000000000000000000000000000000000000815250816004908051906020019062000096929190620000f9565b508060059080519060200190620000af929190620000f9565b50505033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001a8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200013c57805160ff19168380011785556200016d565b828001600101855582156200016d579182015b828111156200016c5782518255916020019190600101906200014f565b5b5090506200017c919062000180565b5090565b620001a591905b80821115620001a157600081600090555060010162000187565b5090565b90565b61221f80620001b86000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610117578063081812fc146101a7578063095ea7b31461021457806318160ddd1461026157806323b872dd1461028c5780632f745c59146102f957806342842e0e1461035a5780634f558e79146103c75780634f6ccce71461040c5780636352211e1461044d57806370a08231146104ba578063715018a6146105115780637897f76a146105285780638da5cb5b146105f757806395d89b411461064e578063a22cb465146106de578063b88d4fde1461072d578063c87b56dd146107e0578063e985e9c514610886578063f2fde38b14610901575b600080fd5b34801561012357600080fd5b5061012c610944565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016c578082015181840152602081019050610151565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b357600080fd5b506101d2600480360381019080803590602001909291905050506109e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022057600080fd5b5061025f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a23565b005b34801561026d57600080fd5b50610276610be9565b6040518082815260200191505060405180910390f35b34801561029857600080fd5b506102f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bf6565b005b34801561030557600080fd5b50610344600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d0d565b6040518082815260200191505060405180910390f35b34801561036657600080fd5b506103c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d84565b005b3480156103d357600080fd5b506103f260048036038101908080359060200190929190505050610dbc565b604051808215151515815260200191505060405180910390f35b34801561041857600080fd5b5061043760048036038101908080359060200190929190505050610e2d565b6040518082815260200191505060405180910390f35b34801561045957600080fd5b5061047860048036038101908080359060200190929190505050610e65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c657600080fd5b506104fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee2565b6040518082815260200191505060405180910390f35b34801561051d57600080fd5b50610526610f66565b005b34801561053457600080fd5b506105f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061106b565b005b34801561060357600080fd5b5061060c611118565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065a57600080fd5b5061066361113e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106a3578082015181840152602081019050610688565b50505050905090810190601f1680156106d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ea57600080fd5b5061072b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111e0565b005b34801561073957600080fd5b506107de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061131c565b005b3480156107ec57600080fd5b5061080b6004803603810190808035906020019092919050505061135b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084b578082015181840152602081019050610830565b50505050905090810190601f1680156108785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561089257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611424565b604051808215151515815260200191505060405180910390f35b34801561090d57600080fd5b50610942600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b005b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a2e82610e65565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a6b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610aab5750610aaa8133611424565b5b1515610ab657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610ad7836109e6565b73ffffffffffffffffffffffffffffffffffffffff16141580610b275750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610be457826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600880549050905090565b80610c013382611610565b1515610c0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610c4857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c8457600080fd5b610c8e84836116a5565b610c98848361180e565b610ca28383611a26565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610d1883610ee2565b82101515610d2557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d7157fe5b9060005260206000200154905092915050565b80610d8f3382611610565b1515610d9a57600080fd5b610db6848484602060405190810160405280600081525061131c565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610e37610be9565b82101515610e4457600080fd5b600882815481101515610e5357fe5b90600052602060002001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ed957600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f1f57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fc257600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c957600080fd5b6110d1611afd565b90506110dd8482611b1f565b6110e78184611b76565b81600c60008381526020019081526020016000206000019080519060200190611111929190612122565b5050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111d65780601f106111ab576101008083540402835291602001916111d6565b820191906000526020600020905b8154815290600101906020018083116111b957829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561121b57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816113273382611610565b151561133257600080fd5b61133d858585610bf6565b61134985858585611bb6565b151561135457600080fd5b5050505050565b606061136682610dbc565b151561137157600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114185780601f106113ed57610100808354040283529160200191611418565b820191906000526020600020905b8154815290600101906020018083116113fb57829003601f168201915b50505050509050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561151457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561155057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061161c83610e65565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061168b57508373ffffffffffffffffffffffffffffffffffffffff16611673846109e6565b73ffffffffffffffffffffffffffffffffffffffff16145b8061169c575061169b8185611424565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166116c582610e65565b73ffffffffffffffffffffffffffffffffffffffff161415156116e757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561180a5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b600080600061181d8585611da4565b600760008581526020019081526020016000205492506118896001600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611ed290919063ffffffff16565b9150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156118d757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561193157fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561198d57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119ed91906121a2565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b6000611a328383611eeb565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b6000611b1a6001611b0c610be9565b61204390919063ffffffff16565b905090565b611b29828261205f565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611b7f82610dbc565b1515611b8a57600080fd5b80600a60008481526020019081526020016000209080519060200190611bb1929190612122565b505050565b600080611bd88573ffffffffffffffffffffffffffffffffffffffff1661210f565b1515611be75760019150611d9b565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ca9578082015181840152602081019050611c8e565b50505050905090810190601f168015611cd65780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611cf757600080fd5b505af1158015611d0b573d6000803e3d6000fd5b505050506040513d6020811015611d2157600080fd5b8101908080519060200190929190505050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b8173ffffffffffffffffffffffffffffffffffffffff16611dc482610e65565b73ffffffffffffffffffffffffffffffffffffffff16141515611de657600080fd5b611e396001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ed290919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000828211151515611ee057fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f5857600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ffc6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461204390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000818301905082811015151561205657fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561209b57600080fd5b6120a58282611a26565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216357805160ff1916838001178555612191565b82800160010185558215612191579182015b82811115612190578251825591602001919060010190612175565b5b50905061219e91906121ce565b5090565b8154818355818111156121c9578183600052602060002091820191016121c891906121ce565b5b505050565b6121f091905b808211156121ec5760008160009055506001016121d4565b5090565b905600a165627a7a72305820fa112852ac79d7056621c8a9391d20fbeecf30b1a24a01cee4426a4aec3fb22a0029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610117578063081812fc146101a7578063095ea7b31461021457806318160ddd1461026157806323b872dd1461028c5780632f745c59146102f957806342842e0e1461035a5780634f558e79146103c75780634f6ccce71461040c5780636352211e1461044d57806370a08231146104ba578063715018a6146105115780637897f76a146105285780638da5cb5b146105f757806395d89b411461064e578063a22cb465146106de578063b88d4fde1461072d578063c87b56dd146107e0578063e985e9c514610886578063f2fde38b14610901575b600080fd5b34801561012357600080fd5b5061012c610944565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016c578082015181840152602081019050610151565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b357600080fd5b506101d2600480360381019080803590602001909291905050506109e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022057600080fd5b5061025f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a23565b005b34801561026d57600080fd5b50610276610be9565b6040518082815260200191505060405180910390f35b34801561029857600080fd5b506102f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bf6565b005b34801561030557600080fd5b50610344600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d0d565b6040518082815260200191505060405180910390f35b34801561036657600080fd5b506103c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d84565b005b3480156103d357600080fd5b506103f260048036038101908080359060200190929190505050610dbc565b604051808215151515815260200191505060405180910390f35b34801561041857600080fd5b5061043760048036038101908080359060200190929190505050610e2d565b6040518082815260200191505060405180910390f35b34801561045957600080fd5b5061047860048036038101908080359060200190929190505050610e65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c657600080fd5b506104fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee2565b6040518082815260200191505060405180910390f35b34801561051d57600080fd5b50610526610f66565b005b34801561053457600080fd5b506105f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061106b565b005b34801561060357600080fd5b5061060c611118565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065a57600080fd5b5061066361113e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106a3578082015181840152602081019050610688565b50505050905090810190601f1680156106d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ea57600080fd5b5061072b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111e0565b005b34801561073957600080fd5b506107de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061131c565b005b3480156107ec57600080fd5b5061080b6004803603810190808035906020019092919050505061135b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084b578082015181840152602081019050610830565b50505050905090810190601f1680156108785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561089257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611424565b604051808215151515815260200191505060405180910390f35b34801561090d57600080fd5b50610942600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b005b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a2e82610e65565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a6b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610aab5750610aaa8133611424565b5b1515610ab657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610ad7836109e6565b73ffffffffffffffffffffffffffffffffffffffff16141580610b275750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610be457826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600880549050905090565b80610c013382611610565b1515610c0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610c4857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c8457600080fd5b610c8e84836116a5565b610c98848361180e565b610ca28383611a26565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610d1883610ee2565b82101515610d2557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d7157fe5b9060005260206000200154905092915050565b80610d8f3382611610565b1515610d9a57600080fd5b610db6848484602060405190810160405280600081525061131c565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610e37610be9565b82101515610e4457600080fd5b600882815481101515610e5357fe5b90600052602060002001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ed957600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f1f57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fc257600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c957600080fd5b6110d1611afd565b90506110dd8482611b1f565b6110e78184611b76565b81600c60008381526020019081526020016000206000019080519060200190611111929190612122565b5050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111d65780601f106111ab576101008083540402835291602001916111d6565b820191906000526020600020905b8154815290600101906020018083116111b957829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561121b57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816113273382611610565b151561133257600080fd5b61133d858585610bf6565b61134985858585611bb6565b151561135457600080fd5b5050505050565b606061136682610dbc565b151561137157600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114185780601f106113ed57610100808354040283529160200191611418565b820191906000526020600020905b8154815290600101906020018083116113fb57829003601f168201915b50505050509050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561151457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561155057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061161c83610e65565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061168b57508373ffffffffffffffffffffffffffffffffffffffff16611673846109e6565b73ffffffffffffffffffffffffffffffffffffffff16145b8061169c575061169b8185611424565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166116c582610e65565b73ffffffffffffffffffffffffffffffffffffffff161415156116e757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561180a5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b600080600061181d8585611da4565b600760008581526020019081526020016000205492506118896001600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611ed290919063ffffffff16565b9150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156118d757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561193157fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561198d57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119ed91906121a2565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b6000611a328383611eeb565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b6000611b1a6001611b0c610be9565b61204390919063ffffffff16565b905090565b611b29828261205f565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611b7f82610dbc565b1515611b8a57600080fd5b80600a60008481526020019081526020016000209080519060200190611bb1929190612122565b505050565b600080611bd88573ffffffffffffffffffffffffffffffffffffffff1661210f565b1515611be75760019150611d9b565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ca9578082015181840152602081019050611c8e565b50505050905090810190601f168015611cd65780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611cf757600080fd5b505af1158015611d0b573d6000803e3d6000fd5b505050506040513d6020811015611d2157600080fd5b8101908080519060200190929190505050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b8173ffffffffffffffffffffffffffffffffffffffff16611dc482610e65565b73ffffffffffffffffffffffffffffffffffffffff16141515611de657600080fd5b611e396001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ed290919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000828211151515611ee057fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f5857600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ffc6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461204390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000818301905082811015151561205657fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561209b57600080fd5b6120a58282611a26565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216357805160ff1916838001178555612191565b82800160010185558215612191579182015b82811115612190578251825591602001919060010190612175565b5b50905061219e91906121ce565b5090565b8154818355818111156121c9578183600052602060002091820191016121c891906121ce565b5b505050565b6121f091905b808211156121ec5760008160009055506001016121d4565b5090565b905600a165627a7a72305820fa112852ac79d7056621c8a9391d20fbeecf30b1a24a01cee4426a4aec3fb22a0029",
  "sourceMap": "170:879:10:-;;;220:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:59:10;1074:96:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:5;1129;:13;;;;;;;;;;;;:::i;:::-;;1158:7;1148;:17;;;;;;;;;;;;:::i;:::-;;1074:96;;575:10:9;567:5;;:18;;;;;;;;;;;;;;;;;;170:879:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "170:879:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:68:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1264:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1264:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3590:111:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3008:355:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:87:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2534:87:6;;;;;;;;;;;;;;;;;;;;;;;5096:342:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5096:342:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:203:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:203:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6054:225:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6054:225:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2448:140:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950::6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2950:140:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2106:164:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2106:164:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1751:142:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1162:111:9;;;;;;559:258:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:258:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:72:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1430:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3986:205:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3986:205:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6966:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6966:302:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:133:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:133:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1695:133:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:168:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4500:168:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:174:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;898:174:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:68:6;1301:6;1322:5;1315:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:68;:::o;3590:111:3:-;3650:7;3672:14;:24;3687:8;3672:24;;;;;;;;;;;;;;;;;;;;;3665:31;;3590:111;;;:::o;3008:355::-;3069:13;3085:17;3093:8;3085:7;:17::i;:::-;3069:33;;3123:5;3116:12;;:3;:12;;;;3108:21;;;;;;;;3157:5;3143:19;;:10;:19;;;:58;;;;3166:35;3183:5;3190:10;3166:16;:35::i;:::-;3143:58;3135:67;;;;;;;;3246:1;3213:35;;:21;3225:8;3213:11;:21::i;:::-;:35;;;;:56;;;;3267:1;3252:17;;:3;:17;;;;3213:56;3209:150;;;3306:3;3279:14;:24;3294:8;3279:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3338:3;3322:30;;3331:5;3322:30;;;3343:8;3322:30;;;;;;;;;;;;;;;;;;3209:150;3008:355;;;:::o;2534:87:6:-;2578:7;2600:9;:16;;;;2593:23;;2534:87;:::o;5096:342:3:-;5207:8;1507:39;1525:10;1537:8;1507:17;:39::i;:::-;1499:48;;;;;;;;5250:1;5233:19;;:5;:19;;;;5225:28;;;;;;;;5282:1;5267:17;;:3;:17;;;;5259:26;;;;;;;;5292:30;5306:5;5313:8;5292:13;:30::i;:::-;5328:32;5344:5;5351:8;5328:15;:32::i;:::-;5366:25;5377:3;5382:8;5366:10;:25::i;:::-;5419:3;5403:30;;5412:5;5403:30;;;5424:8;5403:30;;;;;;;;;;;;;;;;;;5096:342;;;;:::o;2189:203:6:-;2295:7;2329:17;2339:6;2329:9;:17::i;:::-;2320:6;:26;2312:35;;;;;;;;2360:11;:19;2372:6;2360:19;;;;;;;;;;;;;;;2380:6;2360:27;;;;;;;;;;;;;;;;;;2353:34;;2189:203;;;;:::o;6054:225:3:-;6169:8;1507:39;1525:10;1537:8;1507:17;:39::i;:::-;1499:48;;;;;;;;6232:42;6249:5;6256:3;6261:8;6232:42;;;;;;;;;;;;;:16;:42::i;:::-;6054:225;;;;:::o;2448:140::-;2503:4;2515:13;2531:10;:20;2542:8;2531:20;;;;;;;;;;;;;;;;;;;;;2515:36;;2581:1;2564:19;;:5;:19;;;;2557:26;;2448:140;;;;:::o;2950::6:-;3009:7;3041:13;:11;:13::i;:::-;3032:6;:22;3024:31;;;;;;;;3068:9;3078:6;3068:17;;;;;;;;;;;;;;;;;;3061:24;;2950:140;;;:::o;2106:164:3:-;2162:7;2177:13;2193:10;:20;2204:8;2193:20;;;;;;;;;;;;;;;;;;;;;2177:36;;2244:1;2227:19;;:5;:19;;;;2219:28;;;;;;;;2260:5;2253:12;;2106:164;;;;:::o;1751:142::-;1807:7;1848:1;1830:20;;:6;:20;;;;1822:29;;;;;;;;1864:16;:24;1881:6;1864:24;;;;;;;;;;;;;;;;1857:31;;1751:142;;;:::o;1162:111:9:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1238:5;;;;;;;;;;;1219:25;;;;;;;;;;;;1266:1;1250:5;;:18;;;;;;;;;;;;;;;;;;1162:111::o;559:258:10:-;646:18;719:5:9;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;667:17:10;:15;:17::i;:::-;646:38;;694:22;700:3;705:10;694:5;:22::i;:::-;726:35;739:10;751:9;726:12;:35::i;:::-;805:5;772:13;:25;786:10;772:25;;;;;;;;;;;:30;;:38;;;;;;;;;;;;:::i;:::-;;559:258;;;;:::o;238:20:9:-;;;;;;;;;;;;;:::o;1430:72:6:-;1469:6;1490:7;1483:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:72;:::o;3986:205:3:-;4070:10;4063:17;;:3;:17;;;;4055:26;;;;;;;;4124:9;4087:17;:29;4105:10;4087:29;;;;;;;;;;;;;;;:34;4117:3;4087:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4171:3;4144:42;;4159:10;4144:42;;;4176:9;4144:42;;;;;;;;;;;;;;;;;;;;;;3986:205;;:::o;6966:302::-;7098:8;1507:39;1525:10;1537:8;1507:17;:39::i;:::-;1499:48;;;;;;;;7116:34;7129:5;7136:3;7141:8;7116:12;:34::i;:::-;7209:53;7234:5;7241:3;7246:8;7256:5;7209:24;:53::i;:::-;7201:62;;;;;;;;6966:302;;;;;:::o;1695:133:6:-;1752:6;1774:16;1781:8;1774:6;:16::i;:::-;1766:25;;;;;;;;1804:9;:19;1814:8;1804:19;;;;;;;;;;;1797:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:133;;;:::o;4500:168:3:-;4606:4;4627:17;:25;4645:6;4627:25;;;;;;;;;;;;;;;:36;4653:9;4627:36;;;;;;;;;;;;;;;;;;;;;;;;;4620:43;;4500:168;;;;:::o;898:174:9:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;994:1;974:22;;:8;:22;;;;966:31;;;;;;;;1036:8;1008:37;;1029:5;;;;;;;;;;;1008:37;;;;;;;;;;;;1059:8;1051:5;;:16;;;;;;;;;;;;;;;;;;898:174;:::o;7615:438:3:-;7725:4;7739:13;7755:17;7763:8;7755:7;:17::i;:::-;7739:33;;7951:5;7939:17;;:8;:17;;;:60;;;;7991:8;7966:33;;:21;7978:8;7966:11;:21::i;:::-;:33;;;7939:60;:103;;;;8009:33;8026:5;8033:8;8009:16;:33::i;:::-;7939:103;7924:124;;7615:438;;;;;:::o;9122:265::-;9223:6;9202:27;;:17;9210:8;9202:7;:17::i;:::-;:27;;;9194:36;;;;;;;;9276:1;9240:38;;:14;:24;9255:8;9240:24;;;;;;;;;;;;;;;;;;;;;:38;;;;9236:147;;;9323:1;9288:14;:24;9303:8;9288:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9363:1;9338:38;;9347:6;9338:38;;;9367:8;9338:38;;;;;;;;;;;;;;;;;;9236:147;9122:265;;:::o;4218:856:6:-;4336:18;4389:22;4452:17;4291:38;4313:5;4320:8;4291:21;:38::i;:::-;4357:16;:26;4374:8;4357:26;;;;;;;;;;;;4336:47;;4414:32;4444:1;4414:11;:18;4426:5;4414:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4389:57;;4472:11;:18;4484:5;4472:18;;;;;;;;;;;;;;;4491:14;4472:34;;;;;;;;;;;;;;;;;;4452:54;;4546:9;4513:11;:18;4525:5;4513:18;;;;;;;;;;;;;;;4532:10;4513:30;;;;;;;;;;;;;;;;;:42;;;;4598:1;4561:11;:18;4573:5;4561:18;;;;;;;;;;;;;;;4580:14;4561:34;;;;;;;;;;;;;;;;;:38;;;;4960:11;:18;4972:5;4960:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5022:1;4993:16;:26;5010:8;4993:26;;;;;;;;;;;:30;;;;5059:10;5029:16;:27;5046:9;5029:27;;;;;;;;;;;:40;;;;4218:856;;;;;:::o;3713:226::-;3816:14;3779:31;3796:3;3801:8;3779:16;:31::i;:::-;3833:11;:16;3845:3;3833:16;;;;;;;;;;;;;;;:23;;;;3816:40;;3862:11;:16;3874:3;3862:16;;;;;;;;;;;;;;;3884:8;3862:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3862:31:6;;;;;;;;;;;;;;;;;;;;;;3928:6;3899:16;:26;3916:8;3899:26;;;;;;;;;;;:35;;;;3713:226;;;:::o;943:102:10:-;992:7;1018:20;1036:1;1018:13;:11;:13::i;:::-;:17;;:20;;;;:::i;:::-;1011:27;;943:102;:::o;5340:172:6:-;5401:26;5413:3;5418:8;5401:11;:26::i;:::-;5461:9;:16;;;;5434:14;:24;5449:8;5434:24;;;;;;;;;;;:43;;;;5483:9;5498:8;5483:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5483:24:6;;;;;;;;;;;;;;;;;;;;;;5340:172;;:::o;3320:130::-;3396:16;3403:8;3396:6;:16::i;:::-;3388:25;;;;;;;;3441:4;3419:9;:19;3429:8;3419:19;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3320:130;;:::o;10858:335:3:-;10997:4;11065:13;11016:16;:3;:14;;;:16::i;:::-;11015:17;11011:49;;;11049:4;11042:11;;;;11011:49;11096:3;11081:36;;;11125:5;11132:8;11142:5;11081:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11081:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11081:67:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11081:67:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11081:67:3;;;;;;;;;;;;;;;;11065:83;;591:10;11172:15;;11162:25;;;:6;:25;;;;11154:34;;10858:335;;;;;;;;:::o;10133:214::-;10235:5;10214:26;;:17;10222:8;10214:7;:17::i;:::-;:26;;;10206:35;;;;;;;;10273:30;10301:1;10273:16;:23;10290:5;10273:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10247:16;:23;10264:5;10247:23;;;;;;;;;;;;;;;:56;;;;10340:1;10309:10;:20;10320:8;10309:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;10133:214;;:::o;836:110:12:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;9650:204:3:-;9756:1;9724:34;;:10;:20;9735:8;9724:20;;;;;;;;;;;;;;;;;;;;;:34;;;9716:43;;;;;;;;9788:3;9765:10;:20;9776:8;9765:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9821:28;9847:1;9821:16;:21;9838:3;9821:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9797:16;:21;9814:3;9797:21;;;;;;;;;;;;;;;:52;;;;9650:204;;:::o;1008:123:12:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;8307:169:3:-;8391:1;8376:17;;:3;:17;;;;8368:26;;;;;;;;8400:25;8411:3;8416:8;8400:10;:25::i;:::-;8457:3;8436:35;;8453:1;8436:35;;;8462:8;8436:35;;;;;;;;;;;;;;;;;;8307:169;;:::o;438:576:0:-;495:4;507:12;982:4;970:17;962:25;;1008:1;1001:4;:8;994:15;;438:576;;;;:::o;170:879:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./ERC721Token.sol\";\nimport \"./Ownable.sol\";\n\n\n/**\n * @title CryptoPuff\n * CryptoPuff - a contract for my non-fungible crypto puffs.\n */\ncontract QuestCards is ERC721Token, Ownable {\n    constructor() ERC721Token(\"QuestCards\", \"QUEST\") public { }\n\n    /**\n    * @dev Mints a token to an address with a tokenURI.\n    * @param _to address of the future owner of the token\n    * @param _tokenURI token URI for the token\n    */\n\n    struct QuestCard{\n        string Name;\n    }\n\n    mapping (uint=>QuestCard) QuestCardList;\n\n\n    function mintTo(address _to, string _tokenURI,string _name) public onlyOwner {\n        uint256 newTokenId = _getNextTokenId();\n        _mint(_to, newTokenId);\n        _setTokenURI(newTokenId, _tokenURI);\n\n        QuestCardList[newTokenId].Name = _name;\n    }\n\n    /**\n    * @dev calculates the next token ID based on totalSupply\n    * @return uint256 for the next token ID\n    */\n    function _getNextTokenId() private view returns (uint256) {\n        return totalSupply().add(1);\n    }\n\n\n}\n",
  "sourcePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/QuestCards.sol",
  "ast": {
    "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/QuestCards.sol",
    "exportedSymbols": {
      "QuestCards": [
        1436
      ]
    },
    "id": 1437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1368,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/ERC721Token.sol",
        "file": "./ERC721Token.sol",
        "id": 1369,
        "nodeType": "ImportDirective",
        "scope": 1437,
        "sourceUnit": 1171,
        "src": "26:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1370,
        "nodeType": "ImportDirective",
        "scope": 1437,
        "sourceUnit": 1367,
        "src": "54:23:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1371,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1170,
              "src": "193:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1170",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 1372,
            "nodeType": "InheritanceSpecifier",
            "src": "193:11:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1373,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1366,
              "src": "206:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1366",
                "typeString": "contract Ownable"
              }
            },
            "id": 1374,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:10"
          }
        ],
        "contractDependencies": [
          45,
          65,
          72,
          179,
          763,
          1170,
          1366
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoPuff\nCryptoPuff - a contract for my non-fungible crypto puffs.",
        "fullyImplemented": true,
        "id": 1436,
        "linearizedBaseContracts": [
          1436,
          1366,
          1170,
          763,
          72,
          65,
          45,
          179
        ],
        "name": "QuestCards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "276:3:10",
              "statements": []
            },
            "documentation": null,
            "id": 1382,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "51756573744361726473",
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "246:12:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b25bd6757f1b7e0f4ca0873fd7968b4f22183a0ef3a1b78441d1e9420a8894fd",
                      "typeString": "literal_string \"QuestCards\""
                    },
                    "value": "QuestCards"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5155455354",
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "260:7:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6dd88e0a32c18c14d5a81f049d6fd353acc17f8290c55d8a716d975def4edf1e",
                      "typeString": "literal_string \"QUEST\""
                    },
                    "value": "QUEST"
                  }
                ],
                "id": 1379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1376,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1170,
                  "src": "234:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1170_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "234:34:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:10"
            },
            "scope": 1436,
            "src": "220:59:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "QuestCards.QuestCard",
            "id": 1385,
            "members": [
              {
                "constant": false,
                "id": 1384,
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 1385,
                "src": "488:11:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1383,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "QuestCard",
            "nodeType": "StructDefinition",
            "scope": 1436,
            "src": "462:44:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1389,
            "name": "QuestCardList",
            "nodeType": "VariableDeclaration",
            "scope": 1436,
            "src": "512:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
              "typeString": "mapping(uint256 => struct QuestCards.QuestCard)"
            },
            "typeName": {
              "id": 1388,
              "keyType": {
                "id": 1386,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "521:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "512:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
                "typeString": "mapping(uint256 => struct QuestCards.QuestCard)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1387,
                "name": "QuestCard",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1385,
                "src": "527:9:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_QuestCard_$1385_storage_ptr",
                  "typeString": "struct QuestCards.QuestCard"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "636:181:10",
              "statements": [
                {
                  "assignments": [
                    1401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1401,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1423,
                      "src": "646:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1400,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "646:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1404,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1402,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "667:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "646:38:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "700:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1407,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "705:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1405,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1090
                      ],
                      "referencedDeclaration": 1090,
                      "src": "694:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "694:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1411,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "739:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1412,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1393,
                        "src": "751:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1410,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "726:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "726:35:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "QuestCardList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "772:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
                            "typeString": "mapping(uint256 => struct QuestCards.QuestCard storage ref)"
                          }
                        },
                        "id": 1417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1416,
                          "name": "newTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1401,
                          "src": "786:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "772:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestCard_$1385_storage",
                          "typeString": "struct QuestCards.QuestCard storage ref"
                        }
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "772:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1419,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "805:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "772:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "772:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 1423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1397,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1324,
                  "src": "626:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "626:9:10"
              }
            ],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "575:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "588:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1395,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "605:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:44:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:10"
            },
            "scope": 1436,
            "src": "559:258:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1434,
              "nodeType": "Block",
              "src": "1001:44:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1036:1:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1428,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            915
                          ],
                          "referencedDeclaration": 915,
                          "src": "1018:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1018:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "1018:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1018:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1427,
                  "id": 1433,
                  "nodeType": "Return",
                  "src": "1011:27:10"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on totalSupply\n@return uint256 for the next token ID",
            "id": 1435,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "992:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "991:9:10"
            },
            "scope": 1436,
            "src": "943:102:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1437,
        "src": "170:879:10"
      }
    ],
    "src": "0:1050:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/QuestCards.sol",
    "exportedSymbols": {
      "QuestCards": [
        1436
      ]
    },
    "id": 1437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1368,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/ERC721Token.sol",
        "file": "./ERC721Token.sol",
        "id": 1369,
        "nodeType": "ImportDirective",
        "scope": 1437,
        "sourceUnit": 1171,
        "src": "26:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/luyzdeleon/current_projects/QuestMaker/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1370,
        "nodeType": "ImportDirective",
        "scope": 1437,
        "sourceUnit": 1367,
        "src": "54:23:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1371,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1170,
              "src": "193:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1170",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 1372,
            "nodeType": "InheritanceSpecifier",
            "src": "193:11:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1373,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1366,
              "src": "206:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1366",
                "typeString": "contract Ownable"
              }
            },
            "id": 1374,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:10"
          }
        ],
        "contractDependencies": [
          45,
          65,
          72,
          179,
          763,
          1170,
          1366
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoPuff\nCryptoPuff - a contract for my non-fungible crypto puffs.",
        "fullyImplemented": true,
        "id": 1436,
        "linearizedBaseContracts": [
          1436,
          1366,
          1170,
          763,
          72,
          65,
          45,
          179
        ],
        "name": "QuestCards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "276:3:10",
              "statements": []
            },
            "documentation": null,
            "id": 1382,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "51756573744361726473",
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "246:12:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b25bd6757f1b7e0f4ca0873fd7968b4f22183a0ef3a1b78441d1e9420a8894fd",
                      "typeString": "literal_string \"QuestCards\""
                    },
                    "value": "QuestCards"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5155455354",
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "260:7:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6dd88e0a32c18c14d5a81f049d6fd353acc17f8290c55d8a716d975def4edf1e",
                      "typeString": "literal_string \"QUEST\""
                    },
                    "value": "QUEST"
                  }
                ],
                "id": 1379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1376,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1170,
                  "src": "234:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1170_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "234:34:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:10"
            },
            "scope": 1436,
            "src": "220:59:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "QuestCards.QuestCard",
            "id": 1385,
            "members": [
              {
                "constant": false,
                "id": 1384,
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 1385,
                "src": "488:11:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1383,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "QuestCard",
            "nodeType": "StructDefinition",
            "scope": 1436,
            "src": "462:44:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1389,
            "name": "QuestCardList",
            "nodeType": "VariableDeclaration",
            "scope": 1436,
            "src": "512:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
              "typeString": "mapping(uint256 => struct QuestCards.QuestCard)"
            },
            "typeName": {
              "id": 1388,
              "keyType": {
                "id": 1386,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "521:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "512:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
                "typeString": "mapping(uint256 => struct QuestCards.QuestCard)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1387,
                "name": "QuestCard",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1385,
                "src": "527:9:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_QuestCard_$1385_storage_ptr",
                  "typeString": "struct QuestCards.QuestCard"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "636:181:10",
              "statements": [
                {
                  "assignments": [
                    1401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1401,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1423,
                      "src": "646:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1400,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "646:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1404,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1402,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "667:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "646:38:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "700:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1407,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "705:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1405,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1090
                      ],
                      "referencedDeclaration": 1090,
                      "src": "694:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "694:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1411,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "739:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1412,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1393,
                        "src": "751:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1410,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "726:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "726:35:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "QuestCardList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "772:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_QuestCard_$1385_storage_$",
                            "typeString": "mapping(uint256 => struct QuestCards.QuestCard storage ref)"
                          }
                        },
                        "id": 1417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1416,
                          "name": "newTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1401,
                          "src": "786:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "772:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestCard_$1385_storage",
                          "typeString": "struct QuestCards.QuestCard storage ref"
                        }
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "772:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1419,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "805:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "772:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "772:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 1423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1397,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1324,
                  "src": "626:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "626:9:10"
              }
            ],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "575:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "588:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1395,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "605:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:44:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:10"
            },
            "scope": 1436,
            "src": "559:258:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1434,
              "nodeType": "Block",
              "src": "1001:44:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1036:1:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1428,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            915
                          ],
                          "referencedDeclaration": 915,
                          "src": "1018:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1018:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "1018:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1018:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1427,
                  "id": 1433,
                  "nodeType": "Return",
                  "src": "1011:27:10"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on totalSupply\n@return uint256 for the next token ID",
            "id": 1435,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "992:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "991:9:10"
            },
            "scope": 1436,
            "src": "943:102:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1437,
        "src": "170:879:10"
      }
    ],
    "src": "0:1050:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-27T06:44:37.540Z"
}